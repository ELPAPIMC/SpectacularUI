-- XenoUILibrary.lua
-- A modern UI library for Roblox scripts, optimized for Xeno Executor
-- Created for GitHub distribution

local XenoUILibrary = {}
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Create a window with smooth animation
function XenoUILibrary.CreateWindow(title, size, position)
    local screenGui = Instance.new("ScreenGui")
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    screenGui.ResetOnSpawn = false

    local mainFrame = Instance.new("Frame")
    mainFrame.Size = size or UDim2.new(0, 400, 0, 300)
    mainFrame.Position = position or UDim2.new(0.5, -200, 0.5, -150)
    mainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    mainFrame.ClipsDescendants = true
    mainFrame.Parent = screenGui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 12)
    corner.Parent = mainFrame

    local titleBar = Instance.new("Frame")
    titleBar.Size = UDim2.new(1, 0, 0, 40)
    titleBar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    titleBar.Parent = mainFrame

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Text = title or "Xeno UI"
    titleLabel.Size = UDim2.new(1, -10, 1, 0)
    titleLabel.Position = UDim2.new(0, 10, 0, 0)
    titleLabel.BackgroundTransparency = 1
    titleLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    titleLabel.TextScaled = true
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Parent = titleBar

    local contentFrame = Instance.new("Frame")
    contentFrame.Size = UDim2.new(1, 0, 1, -40)
    contentFrame.Position = UDim2.new(0, 0, 0, 40)
    contentFrame.BackgroundTransparency = 1
    contentFrame.Parent = mainFrame

    local uiListLayout = Instance.new("UIListLayout")
    uiListLayout.Padding = UDim.new(0, 8)
    uiListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    uiListLayout.Parent = contentFrame

    local uiPadding = Instance.new("UIPadding")
    uiPadding.PaddingLeft = UDim.new(0, 10)
    uiPadding.PaddingRight = UDim.new(0, 10)
    uiPadding.Parent = contentFrame

    -- Opening animation
    mainFrame.Position = UDim2.new(mainFrame.Position.X.Scale, mainFrame.Position.X.Offset, 1, 0)
    TweenService:Create(mainFrame, TweenInfo.new(0.6, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {
        Position = position or UDim2.new(0.5, -200, 0.5, -150)
    }):Play()

    -- Draggable window
    local dragging, dragInput, dragStart, startPos
    local function updateInput(input)
        local delta = input.Position - dragStart
        mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = mainFrame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    titleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            updateInput(input)
        end
    end)

    return contentFrame, mainFrame, screenGui
end

-- Add a button with hover and click animations
function XenoUILibrary.AddButton(contentFrame, text, callback)
    local button = Instance.new("TextButton")
    button.Text = text or "Button"
    button.Size = UDim2.new(1, 0, 0, 50)
    button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextScaled = true
    button.Font = Enum.Font.Gotham
    button.Parent = contentFrame

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = button

    local shadow = Instance.new("ImageLabel")
    shadow.Size = UDim2.new(1, 10, 1, 10)
    shadow.Position = UDim2.new(0, -5, 0, -5)
    shadow.BackgroundTransparency = 1
    shadow.Image = "rbxassetid://1316045217"
    shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    shadow.ImageTransparency = 0.8
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(10, 10, 118, 118)
    shadow.Parent = button

    -- Hover animation
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundColor3 = Color3.fromRGB(70, 70, 70),
            Size = UDim2.new(1, 2, 0, 52)
        }):Play()
    end)

    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundColor3 = Color3.fromRGB(50, 50, 50),
            Size = UDim2.new(1, 0, 0, 50)
        }):Play()
    end)

    -- Click animation
    button.MouseButton1Down:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {
            Size = UDim2.new(1, -2, 0, 48)
        }):Play()
    end)

    button.MouseButton1Up:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {
            Size = UDim2.new(1, 0, 0, 50)
        }):Play()
        if callback then
            callback()
        end
    end)
end

-- Add a toggle with smooth slide animation
function XenoUILibrary.AddToggle(contentFrame, text, default, callback)
    local toggleFrame = Instance.new("Frame")
    toggleFrame.Size = UDim2.new(1, 0, 0, 50)
    toggleFrame.BackgroundTransparency = 1
    toggleFrame.Parent = contentFrame

    local label = Instance.new("TextLabel")
    label.Text = text or "Toggle"
    label.Size = UDim2.new(0.7, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.TextScaled = true
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.Font = Enum.Font.Gotham
    label.Parent = toggleFrame

    local toggleButton = Instance.new("Frame")
    toggleButton.Size = UDim2.new(0, 60, 0, 30)
    toggleButton.Position = UDim2.new(1, -60, 0.5, -15)
    toggleButton.BackgroundColor3 = default and Color3.fromRGB(0, 170, 255) or Color3.fromRGB(80, 80, 80)
    toggleButton.Parent = toggleFrame

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 15)
    corner.Parent = toggleButton

    local circle = Instance.new("Frame")
    circle.Size = UDim2.new(0, 24, 0, 24)
    circle.Position = default and UDim2.new(1, -30, 0.5, -12) or UDim2.new(0, 6, 0.5, -12)
    circle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    circle.Parent = toggleButton

    local circleCorner = Instance.new("UICorner")
    circleCorner.CornerRadius = UDim.new(0, 12)
    circleCorner.Parent = circle

    local isOn = default or false

    toggleButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isOn = not isOn
            local targetPos = isOn and UDim2.new(1, -30, 0.5, -12) or UDim2.new(0, 6, 0.5, -12)
            local targetColor = isOn and Color3.fromRGB(0, 170, 255) or Color3.fromRGB(80, 80, 80)
            TweenService:Create(circle, TweenInfo.new(0.3, Enum.EasingStyle.Sine), {Position = targetPos}):Play()
            TweenService:Create(toggleButton, TweenInfo.new(0.3), {BackgroundColor3 = targetColor}):Play()
            if callback then
                callback(isOn)
            end
        end
    end)
end

-- Create a notification with slide and fade effects
function XenoUILibrary.Notify(title, content, duration)
    local notificationGui = Instance.new("ScreenGui")
    notificationGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    notificationGui.ResetOnSpawn = false

    local notifyFrame = Instance.new("Frame")
    notifyFrame.Size = UDim2.new(0, 300, 0, 100)
    notifyFrame.Position = UDim2.new(1, 310, 1, -110)
    notifyFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    notifyFrame.Parent = notificationGui

    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = notifyFrame

    local titleLabel = Instance.new("TextLabel")
    titleLabel.Text = title or "Notification"
    titleLabel.Size = UDim2.new(1, -20, 0, 30)
    titleLabel.Position = UDim2.new(0, 10, 0, 10)
    titleLabel.BackgroundTransparency = 1
    titleLabel.TextColor3 = Color3.fromRGB(0, 170, 255)
    titleLabel.TextScaled = true
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.Parent = notifyFrame

    local contentLabel = Instance.new("TextLabel")
    contentLabel.Text = content or "This is a notification!"
    contentLabel.Size = UDim2.new(1, -20, 0, 50)
    contentLabel.Position = UDim2.new(0, 10, 0, 40)
    contentLabel.BackgroundTransparency = 1
    contentLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    contentLabel.TextScaled = true
    contentLabel.TextWrapped = true
    contentLabel.Font = Enum.Font.Gotham
    contentLabel.Parent = notifyFrame

    -- Slide-in animation
    TweenService:Create(notifyFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quart, Enum.EasingDirection.Out), {
        Position = UDim2.new(1, -310, 1, -110)
    }):Play()

    -- Fade out after duration
    spawn(function()
        wait(duration or 5)
        TweenService:Create(notifyFrame, TweenInfo.new(0.5), {Position = UDim2.new(1, 310, 1, -110)}):Play()
        TweenService:Create(notifyFrame, TweenInfo.new(0.5), {BackgroundTransparency = 1}):Play()
        TweenService:Create(titleLabel, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
        TweenService:Create(contentLabel, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
        wait(0.5)
        notificationGui:Destroy()
    end)
end

-- Example usage
local contentFrame = XenoUILibrary.CreateWindow("Xeno UI - Demo")
XenoUILibrary.AddButton(contentFrame, "Show Notification", function()
    XenoUILibrary.Notify("Success!", "You clicked the button!", 3)
end)
XenoUILibrary.AddToggle(contentFrame, "Toggle Effect", false, function(value)
    XenoUILibrary.Notify("Toggle", value and "Effect Enabled" or "Effect Disabled", 3)
end)

return XenoUILibrary
